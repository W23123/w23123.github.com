---
layout: post
title: 数据库事务
date: 2018-02-25 16:49:20 +0300
description: 数据库事务的基本概念
img: transaction.jpeg
tags: [事务]
---

### 数据库事务

- [事务概念](#事务概念)
- [事务的基本特性](#事务的基本特性)
- [事务的一致性](#事务的一致性)
- [事务的隔离性](#事务的隔离性)

---
#### 事务概念
> **一个事务通常包含了一个序列的对数据库的操作。**主要目的：
>1、为数据库操作序列提供一个从失败中恢复到正常状态的方法，同时提供数据库在异常状态数据仍能保持一致的方法
>2、当多个并发程序并发数据库时，可以再应用程序之间提供隔离方法，防止互相干扰


#### 事务的基本特性
> 1、原子性(Atomicity)：事务作为一个整体执行，要么全部执行，要么不执行。
> 2、一致性(Consistency)：事务应确保数据库从一个一致的状态到另一个一致的状态。即数据库应该满足完整性约束。
> 3、隔离性(Isolation)：多个事务并发执行时，一个事务的执行不影响其他事务。
> 4、持久性(Durability)：已提交的事务修改的数据库数据将永久保存在数据库中。

#### 事务的一致性
> **事务的一致性可分为：**
> 强一致性：读操作可立即读到提交的更新操作
> 弱一致性：提交的更新操作不一定立即被读操作读取到
> 最终一致性：是弱一致性的变体。一个事务在更新数据，最终一致性保证在没有其他事务更新同样的值时，最终所有的事务都会读取到事务更新的最新值。
> 单调一致性：如果一个进程读取到一个值，那么后续不会读取到更早的值
> 会话一致性：客户端和服务器交互的会话过程中，读操作可以读到更新操作后的最新值
>
>注意事务的原子性性满足 不一定满足事务的一致性

#### 事务的隔离性
> **如果没有事务的隔离性:**
> 脏读：如果一个事务A 修改数据还未提交，此时事务B读取了事务A的值，如果事务A提交失败，事务B读取的就是脏数据
> 不可重复读：在同一个事务里，对同一份数据读取的结果不一致。
> 幻读：在同一个事务中，同一个查询多次返回的结果不一致。事务A新增了一条记录，事务B在事务A提交前后各执行了一次查询操作，发现后一次比前一次多了一条记录。幻读仅指由于并发事务增加记录导致的问题，这个不能像不可重复读通过记录加锁解决，因为对于新增的记录根本无法加锁。需要将事务串行化，才能避免幻读。
>
>**事务隔离级别:**
>未提交读(Read uncommitted)：就是一个事务可以读取另一个事务未提交的数据。
>提交读(Read committed)：只有事务提交后其他事务才能看见更新结果。
>可重复读(Repeatable read)：在同一个事务里对同一份数据读取结果总是相同。
>序列化(Serialization)：事务串行执行。